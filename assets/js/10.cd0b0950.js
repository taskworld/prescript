(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{342:function(e,t,r){"use strict";r.r(t);var s=r(33),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"introduction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),r("p",[e._v("This page will attempt to give you an "),r("strong",[e._v("executive overview")]),e._v(" and explain "),r("strong",[e._v("why\nwe created prescript")]),e._v(" in the first place. It also explains some of our design\nchoices.")]),e._v(" "),r("p",[e._v("If you want to dive in right away, feel free to\n"),r("span",{attrs:{onclick:"alert('okay.')"}},[r("RouterLink",{attrs:{to:"/guide/tutorial.html"}},[e._v("skip this section")])],1),e._v(".")]),e._v(" "),r("h2",{attrs:{id:"what-s-that-friend-yet-another-testing-framework"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-s-that-friend-yet-another-testing-framework"}},[e._v("#")]),e._v(" What’s that, friend? Yet another testing framework??")]),e._v(" "),r("p",[r("strong",[e._v("prescript")]),e._v(" is a test runner that’s designed to solve this one pain point:")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("PAIN POINT")]),e._v(" "),r("p",[r("strong",[e._v("When a test fails, we had to re-run our test all the way from the very\nbeginning.")]),e._v(" This makes writing E2E tests painful for a long multi-step\nscenarios (e.g. user onboarding tests). It’s especially frustrating when we need\nto debug part of a test scenario that’s flaky.")])]),e._v(" "),r("p",[r("strong",[e._v("prescript")]),e._v(" solves this pain point by providing an "),r("strong",[e._v("interactive development\nmode.")]),e._v(" In this mode, if your test fails, prescript will pause your test where\nit failed. You can fix your test, hot reload the code in, and resume running,\nwithout having to re-run your test from the beginning.")]),e._v(" "),r("p",[e._v("This makes "),r("strong",[e._v("prescript")]),e._v(" suitable for developing functional or E2E (end-to-end)\ntests, although you can use it for other kind of tests as well.")]),e._v(" "),r("h2",{attrs:{id:"any-other-features"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#any-other-features"}},[e._v("#")]),e._v(" Any other features?")]),e._v(" "),r("p",[r("strong",[e._v("prescript")]),e._v(" has few other features:")]),e._v(" "),r("h3",{attrs:{id:"it-s-easily-parallelizable…-hmm-is-that-a-word"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#it-s-easily-parallelizable…-hmm-is-that-a-word"}},[e._v("#")]),e._v(" It’s easily "),r("em",[e._v("parallelizable…")]),e._v(" hmm, is that a word?")]),e._v(" "),r("p",[e._v("E2E tests usually take quite a long time to run (compared to unit tests).")]),e._v(" "),r("p",[e._v("To be scalable, we need to think about running these tests in parallel.")]),e._v(" "),r("p",[e._v("prescript’s philosophy is "),r("strong",[e._v("“1 test = 1 file.”")]),e._v(" This makes it very easy to\ndistribute tests across multiple machines. We at Taskworld run about 16 tests\nsimultaneously.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("NOTE")]),e._v(" "),r("p",[r("strong",[e._v("prescript")]),e._v(" does not have a notion of ‘test suites’; the CLI only runs a\nsingle test. You need to write your own script in order to run multiple tests.\nThis gives you complete control and thus maximum flexibility in orchestrating\nyour tests.")]),e._v(" "),r("p",[e._v("For simple projects, a simple shell script may suffice, i.e.\n"),r("code",[e._v('for I in tests/*.js; do yarn prescript "$I"; done')]),e._v(". For larger projects you can\nutilize orchestration tools provided by your platform, e.g. you may use\n"),r("a",{attrs:{href:"https://circleci.com/docs/2.0/parallelism-faster-jobs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CircleCI’s split testing support"),r("OutboundLink")],1),e._v("\nto run tests in parallel on CircleCI.")])]),e._v(" "),r("h3",{attrs:{id:"beautiful-report-thanks-to-someone-else"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beautiful-report-thanks-to-someone-else"}},[e._v("#")]),e._v(" Beautiful report, thanks to someone else")]),e._v(" "),r("p",[r("strong",[e._v("prescript")]),e._v(" integrates with\n"),r("a",{attrs:{href:"https://docs.qameta.io/allure/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Allure Framework"),r("OutboundLink")],1),e._v(":")]),e._v(" "),r("blockquote",[r("p",[e._v("Allure Framework is a flexible lightweight multi-language test report tool\nthat not only shows a very concise representation of what have been tested in\na neat web report form, but allows everyone participating in the development\nprocess to extract maximum of useful information from everyday execution of\ntests.")])]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),r("p",[e._v("Click on the link above that says ‘Allure Framework’ to witness the beauty of\nthe generated test reports!")])]),e._v(" "),r("h3",{attrs:{id:"we-ve-been-using-it-for-2-years-internally"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#we-ve-been-using-it-for-2-years-internally"}},[e._v("#")]),e._v(" We’ve been using it for 2 years internally")]),e._v(" "),r("p",[e._v("We at "),r("a",{attrs:{href:"https://taskworld.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Taskworld"),r("OutboundLink")],1),e._v(" developed prescript and have been\nusing it to test our production code for 2 years, so you may say it’s quite\nmatured now.")]),e._v(" "),r("h3",{attrs:{id:"…but-we-don-t-provide-support…-wait-this-isn-t-a-feature"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#…but-we-don-t-provide-support…-wait-this-isn-t-a-feature"}},[e._v("#")]),e._v(" …but we don’t provide support… wait, this isn’t a feature?")]),e._v(" "),r("p",[e._v("I wanted to be upfront about this:")]),e._v(" "),r("p",[e._v("We open-sourced prescript primarily so that other people can benefit from our\ntool. However, we don’t plan to provide support for this tool outside of our use\ncases. And there may even be breaking changes where necessary (breaking changes\nfor you are breaking changes for us, too). Therefore, please be prepared to help\nyourself.")]),e._v(" "),r("p",[e._v("Please feel free to fork this tool and adapt it to your use cases. Pull requests\nare welcome.")]),e._v(" "),r("h2",{attrs:{id:"prescript-is-not-a-framework"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prescript-is-not-a-framework"}},[e._v("#")]),e._v(" prescript is not a framework?")]),e._v(" "),r("p",[r("strong",[e._v("prescript")]),e._v(" is not a framework; it’s "),r("s",[e._v("a people")]),e._v(" a "),r("strong",[e._v("test runner.")]),e._v(" What did\nI mean by that? Let’s say you want to test a web application. You’ll need to\nhave these components set up:")]),e._v(" "),r("ol",[r("li",[r("p",[r("strong",[e._v("Browser automation library.")]),e._v(" This allows you to programmatically control\na browser. Normally you would use\n"),r("a",{attrs:{href:"https://www.npmjs.com/package/selenium-webdriver",target:"_blank",rel:"noopener noreferrer"}},[e._v("selenium-webdriver"),r("OutboundLink")],1),e._v(" or\n"),r("a",{attrs:{href:"https://www.npmjs.com/package/puppeteer",target:"_blank",rel:"noopener noreferrer"}},[e._v("puppeteer"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("prescript")]),e._v(" doesn’t care. You can use any library you want. That means you\ncan also use prescript to test mobile apps, desktop apps, CLI tools, APIs, or\nanything.")])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Test runner.")]),e._v(" They provide a way to organize your test code and run it.\n"),r("strong",[e._v("prescript")]),e._v(" is a test runner. Different test runners have different ways\nof organizing your test code. For example:")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/mocha",target:"_blank",rel:"noopener noreferrer"}},[e._v("mocha"),r("OutboundLink")],1),e._v(" lets your organize tests into\n“suites” and “tests”, using "),r("code",[e._v("describe")]),e._v(" and "),r("code",[e._v("it")]),e._v(" (or "),r("code",[e._v("suite")]),e._v(" and "),r("code",[e._v("test")]),e._v(").")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://cucumber.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("cucumber"),r("OutboundLink")],1),e._v(" lets you organize your “executable\nspecifications” into “features” and “scenarios” using the Gherkin syntax.")]),e._v(" "),r("li",[r("strong",[e._v("prescript")]),e._v(" lets you organize your test code into “tests” and “steps.” A\nstep may contain sub-steps.")])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Assertion library.")]),e._v(" These provides you with an API to make assertions.\nThis includes\n"),r("a",{attrs:{href:"https://nodejs.org/api/assert.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Node.js’s "),r("code",[e._v("assert")]),e._v(" module"),r("OutboundLink")],1),e._v(",\n"),r("a",{attrs:{href:"http://chaijs.com/api/bdd/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Chai"),r("OutboundLink")],1),e._v(", etc. Some test tools, such as\n"),r("a",{attrs:{href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jest"),r("OutboundLink")],1),e._v(" provides its own built-in assertion library.\nprescript doesn’t.")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("prescript")]),e._v(" doesn’t care. You can use any library you want.")])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Test reporter.")]),e._v(" These components generate a beautiful test report for\nother humans to see (or for other computer programs to further process).")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("prescript")]),e._v(" does not come with its own reporter, but it integrates with\n"),r("a",{attrs:{href:"https://docs.qameta.io/allure/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Allure Framework"),r("OutboundLink")],1),e._v(".")])])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Test orchestrator.")]),e._v(" You have many tests, but how do you run them? One by\none, sequentially? In parallel, on the same process? On separate processes?\nOn separate machines? On an on-demand auto-scaling cluster that runs tests\nin a containerized environment? In which order? If they fail, do you retry\nthem? For how many times? Do you retry immediately, or retry at the end of\nthe test batch? Should tests be aborted if too many tests failed in a row?\nThat’s the job of the test orchestrator — it determines which tests to run\nwhen.")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("prescript")]),e._v(" doesn’t care. A prescript process only runs a single test\nonce. That means you must write your own orchestrator.")])])])]),e._v(" "),r("p",[e._v("Several testing frameworks, such as "),r("a",{attrs:{href:"https://www.cypress.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cypress"),r("OutboundLink")],1),e._v(",\n"),r("a",{attrs:{href:"https://codecept.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Codecept"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"http://nightwatchjs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nightwatch"),r("OutboundLink")],1),e._v("\ncomes with all of them integrated in a single package, but "),r("strong",[e._v("prescript")]),e._v(" is just\na test runner.")]),e._v(" "),r("p",[e._v("So, why this extreme "),r("strong",[e._v("modularity")]),e._v("?")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("Being modular allows you to use prescript to test anything. As of writing,\n"),r("a",{attrs:{href:"https://www.cypress.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cypress"),r("OutboundLink")],1),e._v(" is known to provide one of the best\ntesting experiences for web apps, but it’s only for web apps.")]),e._v(" "),r("p",[e._v("With prescript, "),r("RouterLink",{attrs:{to:"/guide/tutorial.html"}},[e._v("our testing experience")]),e._v(" can be used for\nanything you may want to test.")],1)]),e._v(" "),r("li",[r("p",[e._v("Different projects have different test orchestration needs (as illustrated\nabove), and it depends on the use case, the technology stack, the scale, and\nother constraints.")]),e._v(" "),r("p",[e._v("Making prescript support all of them would make it unnecessarily complex. By\nnot doing any orchestration, it reduces complexity (and maintenance burden)\nfor us, and gives flexibility for you.")])])]),e._v(" "),r("p",[e._v("So, think of "),r("strong",[e._v("prescript")]),e._v(" as a building block you can use to create great\ntesting experience!")])])}),[],!1,null,null,null);t.default=o.exports}}]);